import golosinas.*
import mariano.*

describe "tests de mariano" {

	fixture {
		chocolatin.pesoInicial(100)
		mariano.comprar(chocolatin)
		mariano.comprar(caramelo)
		mariano.comprar(bombon)
	}

	test "test comprar" {
		assert.equals(3, mariano.golosinas().size())
		assert.that(mariano.golosinas().contains(chocolatin))
		assert.that(mariano.golosinas().contains(caramelo))
		assert.that(mariano.golosinas().contains(bombon))
		assert.notThat(mariano.golosinas().contains(chupetin))
	}
	
	test "probar golosinas" {
		/* habilitar las lineas anuladas cuando se complete la definicion 
		 * de las golosinas
		 */
		assert.equals(100, chocolatin.peso())
		assert.equals(5, caramelo.peso())
		assert.equals(15, bombon.peso())
		mariano.probarGolosinas()
		assert.equals(98, chocolatin.peso())
		assert.equals(4, caramelo.peso())
		assert.equals(11, bombon.peso())
	}
	
	test "golosinas faltantes"{
		assert.equals([alfajor,oblea], mariano.golosinasFaltantes([chocolatin, caramelo, alfajor, oblea]))
	}
	
	test "golosinas sin tacc"{
		assert.that(mariano.hayGolosinaSinTACC())
	}
	
	test "precios cuidados"{
		assert.notThat(mariano.preciosCuidados())
	}
	
	test "golosina de sabor <frutilla>"{
		assert.equals(caramelo, mariano.golosinaDeSabor("frutilla"))
	}
	
	test "golosinas de sabor <frutilla>"{
		assert.equals([caramelo, bombon], mariano.golosinasDeSabor("frutilla"))
	}
	
	test "sabores"{
		assert.equals(["frutilla", "chocolate"])
	}
	
	test "golosina mas cara"{
		assert.equals(chocolatin, mariano.golosinaMasCara())
	}
	
	test "peso golosina"{
		assert.equals(120, mariano.pesoGolosinas())
	}
	
	test "gustos faltantes"{
		assert.equals(["naranja"], mariano.gustosFaltantes(["frutilla", "naranja", "chocolate"]))
	}
}

